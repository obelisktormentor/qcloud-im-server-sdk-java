import{_ as t,r as e,c as p,a as c,b as n,d as l,w as o,e as s,o as i}from"./app-ZP_PHHWl.js";const d={},u=s(`<h1 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手"><span>快速上手</span></a></h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><h3 id="maven" tabindex="-1"><a class="header-anchor" href="#maven"><span>Maven</span></a></h3><p>在项目的 <code>pom.xml</code> 的 dependencies 中引入以下依赖:</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.doocs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>im-server-sdk-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.4.02<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gradle" tabindex="-1"><a class="header-anchor" href="#gradle"><span>Gradle</span></a></h3><div class="language-gradle line-numbers-mode" data-highlighter="prismjs" data-ext="gradle" data-title="gradle"><pre class="language-gradle"><code><span class="line"><span class="token keyword">implementation</span> group<span class="token punctuation">:</span> <span class="token string">&#39;io.github.doocs&#39;</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">&#39;im-server-sdk-java&#39;</span><span class="token punctuation">,</span> version<span class="token punctuation">:</span> <span class="token string">&#39;0.4.02&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="下载-jar" tabindex="-1"><a class="header-anchor" href="#下载-jar"><span>下载 JAR</span></a></h3><p><a href="https://repo1.maven.org/maven2/io/github/doocs/im-server-sdk-java/" target="_blank" rel="noopener noreferrer">Maven 中央仓库</a></p><h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化"><span>初始化</span></a></h2><p>在使用腾讯云即时 IM 服务端 REST API 之前， 需要先通过 <code>appId</code>, <code>userId</code>, <code>key</code> 获取到一个 <code>ImClient</code> 实例:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">// sdk appId</span></span>
<span class="line"><span class="token keyword">long</span> appId <span class="token operator">=</span> <span class="token number">1400554812</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// admin userId</span></span>
<span class="line"><span class="token class-name">String</span> userId <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// application key</span></span>
<span class="line"><span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token string">&quot;60c6c5925f3ae52c7325ac5a8ec78e44c056d1dd84d54e12ffa39911267a2a70&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// create a default ImClient instance</span></span>
<span class="line"><span class="token class-name">ImClient</span> client <span class="token operator">=</span> <span class="token class-name">ImClient</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>appId<span class="token punctuation">,</span> userId<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// create a default ImClient instance with custom domain</span></span>
<span class="line"><span class="token class-name">ImClient</span> client <span class="token operator">=</span> <span class="token class-name">ImClient</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>appId<span class="token punctuation">,</span> userId<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token class-name">Domain</span><span class="token punctuation">.</span><span class="token constant">SINGAPORE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// create a custom ImClient instance</span></span>
<span class="line"><span class="token class-name">ClientConfiguration</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClientConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">config<span class="token punctuation">.</span><span class="token function">setExpireTime</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60L</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">config<span class="token punctuation">.</span><span class="token function">setAutoRenewSig</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">ImClient</span> client <span class="token operator">=</span> <span class="token class-name">ImClient</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>appId<span class="token punctuation">,</span> userId<span class="token punctuation">,</span> key<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ClientConfiguration</code> 支持对以下参数进行自定义配置：</p><table><thead><tr><th>字段</th><th>类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td><code>maxRetries</code></td><td>int</td><td>HTTP 最大重试次数</td><td>3</td></tr><tr><td><code>connectTimeout</code></td><td>long</td><td>HTTP 连接超时（毫秒）</td><td>10_000</td></tr><tr><td><code>readTimeout</code></td><td>long</td><td>HTTP 读超时（毫秒）</td><td>10_000</td></tr><tr><td><code>writeTimeout</code></td><td>long</td><td>HTTP 写超时（毫秒）</td><td>10_000</td></tr><tr><td><code>callTimeout</code></td><td>long</td><td>一个完整的 HTTP 调用的时间限制。这包括解析 DNS、连接、写入请求正文、服务器处理以及读取响应正文。（毫秒）</td><td>30_000</td></tr><tr><td><code>expireTime</code></td><td>long</td><td>UserSig 签名有效时长（秒）</td><td>86400</td></tr><tr><td><code>autoRenewSig</code></td><td>boolean</td><td>是否自动进行 UserSig 签名续期</td><td>true</td></tr><tr><td><code>userAgent</code></td><td>string</td><td>User-Agent</td><td></td></tr><tr><td><code>connectionPool</code></td><td>object</td><td>HTTP 连接池</td><td></td></tr></tbody></table><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例</span></a></h2><p>获取到 <code>ImClient</code> 实例后，就可以方便地进行 REST API 调用了。</p>`,16),r=s(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">AccountImportRequest</span> request <span class="token operator">=</span> <span class="token class-name">AccountImportRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">identifier</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">faceUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://avatars.githubusercontent.com/u/43716716?s=200&amp;v=4&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">nick</span><span class="token punctuation">(</span><span class="token string">&quot;doocs&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">AccountImportResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>account<span class="token punctuation">.</span><span class="token function">accountImport</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function k(m,g){const a=e("RouteLink");return i(),p("div",null,[u,c("p",null,[n("我们以 "),l(a,{to:"/guide/account.html#%E5%AF%BC%E5%85%A5%E5%8D%95%E4%B8%AA%E8%B4%A6%E5%8F%B7"},{default:o(()=>[n("账号管理-导入单个账号")]),_:1}),n(" 为例：")]),r])}const h=t(d,[["render",k],["__file","quickstart.html.vue"]]),b=JSON.parse('{"path":"/guide/quickstart.html","title":"快速上手","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"Maven","slug":"maven","link":"#maven","children":[]},{"level":3,"title":"Gradle","slug":"gradle","link":"#gradle","children":[]},{"level":3,"title":"下载 JAR","slug":"下载-jar","link":"#下载-jar","children":[]}]},{"level":2,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":2,"title":"使用示例","slug":"使用示例","link":"#使用示例","children":[]}],"git":{"updatedTime":1718266706000,"contributors":[{"name":"Yang Libin","email":"szuyanglb@outlook.com","commits":46},{"name":"yanglbme","email":"szuyanglb@outlook.com","commits":14},{"name":"Libin YANG","email":"szuyanglb@outlook.com","commits":2},{"name":"怡蘅","email":"hongyihengg@gmail.com","commits":2},{"name":"Antenbabby","email":"18116874+Antenbabby@users.noreply.github.com","commits":1},{"name":"acbin","email":"44314231+acbin@users.noreply.github.com","commits":1},{"name":"yu","email":"502400992@qq.com","commits":1}]},"filePathRelative":"guide/quickstart.md"}');export{h as comp,b as data};
