import{_ as n,c as s,o as a,e as t}from"./app-ZP_PHHWl.js";const p={},e=t(`<h1 id="单聊消息" tabindex="-1"><a class="header-anchor" href="#单聊消息"><span>单聊消息</span></a></h1><h2 id="单发单聊消息" tabindex="-1"><a class="header-anchor" href="#单发单聊消息"><span>单发单聊消息</span></a></h2><ul><li>管理员向账号发消息，接收方看到消息发送者是管理员。</li><li>管理员指定某一账号向其他账号发消息，接收方看到发送者不是管理员，而是管理员指定的账号。</li><li>该接口不会检查发送者和接收者的好友关系（包括黑名单），同时不会检查接收者是否被禁言。</li><li>该接口默认不会检查接收者对发送者是否设置了免打扰，如需检查，请在&quot;SendMsgControl&quot;字段填上&quot;WithMuteNotifications&quot;。</li><li>单聊消息 MsgSeq 字段的作用及说明：该字段在发送消息时由用户自行指定，该值可以重复，非后台生成，非全局唯一。与群聊消息的 MsgSeq 字段不同，群聊消息的 MsgSeq 由后台生成，每个群都维护一个 MsgSeq，从 1 开始严格递增。单聊消息历史记录对同一个会话的消息先以时间戳排序，同秒内的消息再以 MsgSeq 排序。</li></ul><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">TIMTextMsgElement</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TIMTextMsgElement</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TIMMsgElement</span><span class="token punctuation">&gt;</span></span> msgBody <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">SendMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">SendMsgRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgRandom</span><span class="token punctuation">(</span><span class="token number">123L</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgBody</span><span class="token punctuation">(</span>msgBody<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">syncOtherMachine</span><span class="token punctuation">(</span><span class="token class-name">SyncOtherMachine</span><span class="token punctuation">.</span><span class="token constant">YES</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgTimeStamp</span><span class="token punctuation">(</span><span class="token number">1631934058</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgLifeTime</span><span class="token punctuation">(</span><span class="token number">604800</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">SendMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="批量发单聊消息" tabindex="-1"><a class="header-anchor" href="#批量发单聊消息"><span>批量发单聊消息</span></a></h2><ul><li>支持一次对最多 500 个用户进行单发消息。</li><li>与单发消息相比，该接口更适用于营销类消息、系统通知 tips 等时效性较强的消息。</li><li>若消息不需要计入未读数，也不需要存储聊天记录，则可将 MsgLifeTime 字段设置为 0，这样可以带来更快的消息下发速度。</li><li>管理员指定某一账号向目标账号批量发消息，接收方看到发送者不是管理员，而是管理员指定的账号。</li><li>该接口不触发回调请求。</li><li>该接口不会检查发送者和接收者的好友关系（包括黑名单），同时不会检查接收者是否被禁言。</li><li>该接口默认不会检查接收者对发送者是否设置了免打扰，如需检查，请在&quot;SendMsgControl&quot;字段填上&quot;WithMuteNotifications&quot;。</li><li>单聊消息 MsgSeq 字段的作用及说明：该字段在发送消息时由用户自行指定，该值可以重复，非后台生成，非全局唯一。与群聊消息的 MsgSeq 字段不同，群聊消息的 MsgSeq 由后台生成，每个群都维护一个 MsgSeq，从 1 开始严格递增。单聊消息历史记录对同一个会话的消息先以时间戳排序，同秒内的消息再以 MsgSeq 排序。</li></ul><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> toAccount <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">TIMTextMsgElement</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TIMTextMsgElement</span><span class="token punctuation">(</span><span class="token string">&quot;hi bingo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TIMMsgElement</span><span class="token punctuation">&gt;</span></span> msgBody <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">BatchSendMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">BatchSendMsgRequest</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span>toAccount<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgRandom</span><span class="token punctuation">(</span><span class="token number">123L</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgBody</span><span class="token punctuation">(</span>msgBody<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">syncOtherMachine</span><span class="token punctuation">(</span><span class="token class-name">SyncOtherMachine</span><span class="token punctuation">.</span><span class="token constant">NO</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgSeq</span><span class="token punctuation">(</span><span class="token number">28460L</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">BatchSendMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">batchSendMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="导入单聊消息" tabindex="-1"><a class="header-anchor" href="#导入单聊消息"><span>导入单聊消息</span></a></h2><ul><li>导入历史单聊消息到即时通信 IM。</li><li>平滑过渡期间，将原有即时通信实时单聊消息导入到即时通信 IM。</li><li>该接口会更新会话。</li><li>该接口不会触发回调。</li><li>对于同一个单聊会话的消息，该接口会根据 MsgSeq ， MsgRandom ， MsgTimeStamp 字段的值对导入的消息进行去重。<strong>仅当这三个字段的值都对应相同时，才判定消息是重复的，消息是否重复与消息内容本身无关。</strong> 另外，若两条消息的 MsgSeq ， MsgRandom ， MsgTimeStamp 字段对应相同，而 from_account 和 to_account 相反，则这两条消息也认为是重复的。</li><li>重复导入的消息不会覆盖之前已导入的消息（即消息内容以首次导入的为准）。</li><li>单聊消息 MsgSeq 字段的作用及说明：该字段在发送消息时由用户自行指定，该值可以重复，非后台生成，非全局唯一。与群聊消息的 MsgSeq 字段不同，群聊消息的 MsgSeq 由后台生成，每个群都维护一个 MsgSeq，从 1 开始严格递增。单聊消息历史记录对同一个会话的消息先以时间戳排序，同秒内的消息再以 MsgSeq 排序。</li></ul><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">TIMTextMsgElement</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TIMTextMsgElement</span><span class="token punctuation">(</span><span class="token string">&quot;hello bingo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TIMMsgElement</span><span class="token punctuation">&gt;</span></span> msgBody <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">ImportMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">ImportMsgRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;bingo&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgRandom</span><span class="token punctuation">(</span><span class="token number">122L</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgTimeStamp</span><span class="token punctuation">(</span><span class="token number">1557387418</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgBody</span><span class="token punctuation">(</span>msgBody<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">ImportMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">importMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询单聊消息" tabindex="-1"><a class="header-anchor" href="#查询单聊消息"><span>查询单聊消息</span></a></h2><ul><li>管理员按照时间范围查询某单聊会话的消息记录。</li><li>查询的单聊会话由请求中的 From_Account 和 To_Account 指定。查询结果包含会话双方互相发送的消息，具体每条消息的发送方和接收方由每条消息里的 From_Account 和 To_Account 指定。</li><li>一般情况下，请求中的 From_Account 和 To_Account 字段值互换，查询结果不变。但通过 <a href="#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">单发单聊消息</a> 或 <a href="#%E6%89%B9%E9%87%8F%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">批量发单聊消息</a> 接口发送的消息，如果指定 SyncOtherMachine 值为 2，则需要指定正确的 From_Account 和 To_Account 字段值才能查询到该消息。 例如，通过 <a href="#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">单发单聊消息</a> 接口指定账号 A 给账号 B 发一条消息，同时指定 SyncOtherMachine 值为 2。则调用本接口时，From_Account 必须设置为账号 B，To_Account 必须设置为账号 A 才能查询到该消息。</li><li>查询结果包含被撤回的消息，由消息里的 MsgFlagBits 字段标识。</li><li>若想通过 <a href="#%E6%92%A4%E5%9B%9E%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">撤回单聊消息</a> 接口撤回某条消息，可先用本接口查询出该消息的 MsgKey，然后再调用撤回接口进行撤回。</li><li>可查询的消息记录的时间范围取决于漫游消息存储时长，默认是 7 天。支持在控制台修改消息漫游时长，延长消息漫游时长是增值服务。具体请参考 <a href="https://cloud.tencent.com/document/product/269/3571#.E6.BC.AB.E6.B8.B8.E6.B6.88.E6.81.AF.E5.AD.98.E5.82.A8" target="_blank" rel="noopener noreferrer">漫游消息存储</a>。</li><li>若请求时间段内的消息总大小超过应答包体大小限制（目前为 13K）时，则需要续拉。您可以通过应答中的 Complete 字段查看是否已拉取请求的全部消息。</li></ul><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">AdminGetRoamMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">AdminGetRoamMsgRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">maxCnt</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">minTime</span><span class="token punctuation">(</span><span class="token number">1631934000</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">maxTime</span><span class="token punctuation">(</span><span class="token number">1631934060</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">AdminRoamMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">getRoamMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MsgListItem</span><span class="token punctuation">&gt;</span></span> msgList <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getMsgList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>msgList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MsgListItem</span> item <span class="token operator">:</span> msgList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TIMMsgElement</span><span class="token punctuation">&gt;</span></span> msgBody <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getMsgBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>msgBody <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TIMMsgElement</span> msgElement <span class="token operator">:</span> msgBody<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 根据 msgType 强转为对应的子类</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>msgElement<span class="token punctuation">.</span><span class="token function">getMsgType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MsgType</span><span class="token punctuation">.</span><span class="token constant">TIM_CUSTOM_ELEM</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">TIMCustomMsgElement</span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TIMCustomMsgElement</span><span class="token punctuation">)</span> msgElement<span class="token punctuation">;</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getMsgContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>msgElement<span class="token punctuation">.</span><span class="token function">getMsgType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MsgType</span><span class="token punctuation">.</span><span class="token constant">TIM_TEXT_ELEM</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">TIMTextMsgElement</span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TIMTextMsgElement</span><span class="token punctuation">)</span> msgElement<span class="token punctuation">;</span></span>
<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getMsgContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="撤回单聊消息" tabindex="-1"><a class="header-anchor" href="#撤回单聊消息"><span>撤回单聊消息</span></a></h2><ul><li>管理员撤回单聊消息。</li><li>该接口可以撤回所有单聊消息，包括客户端发出的单聊消息，由 <a href="#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">单发</a> 和 <a href="#%E6%89%B9%E9%87%8F%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">批量发</a> 接口发出的单聊消息。</li><li>若需要撤回由客户端发出的单聊消息，您可以开通 <a href="https://cloud.tencent.com/document/product/269/38980" target="_blank" rel="noopener noreferrer">发单聊消息之前回调</a> 或 <a href="https://cloud.tencent.com/document/product/269/38980" target="_blank" rel="noopener noreferrer">发单聊消息之后回调</a> ，通过该回调接口记录每条单聊消息的 MsgKey ，然后填在本接口的 MsgKey 字段进行撤回。您也可以通过 <a href="#%E6%9F%A5%E8%AF%A2%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">查询单聊消息</a> 查询出待撤回的单聊消息的 MsgKey 后，填在本接口的 MsgKey 字段进行撤回。</li><li>若需要撤回由 <a href="#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">单发</a> 和 <a href="#%E6%89%B9%E9%87%8F%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">批量发</a> 接口发出的单聊消息，需要记录这些接口回包里的 MsgKey 字段以进行撤回。</li><li>调用该接口撤回消息后，该条消息的离线、漫游存储，以及消息发送方和接收方的客户端的本地缓存都会被撤回。</li><li>该接口可撤回的单聊消息没有时间限制，即可以撤回任何时间的单聊消息。</li></ul><div class="custom-container warning"><p class="custom-container-title">注意</p><p>使用该接口撤回单聊消息后，被撤回的消息不能恢复，请谨慎调用该接口。</p></div><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">AdminMsgWithdrawRequest</span> request <span class="token operator">=</span> <span class="token class-name">AdminMsgWithdrawRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;bingo&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgKey</span><span class="token punctuation">(</span><span class="token string">&quot;31906_833502_1572869830&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">AdminMsgWithdrawResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">msgWithdraw</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置单聊消息已读" tabindex="-1"><a class="header-anchor" href="#设置单聊消息已读"><span>设置单聊消息已读</span></a></h2><ul><li>设置用户的某个单聊会话的消息已读。</li></ul><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">AdminSetMsgReadRequest</span> request <span class="token operator">=</span> <span class="token class-name">AdminSetMsgReadRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">reportAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">peerAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">AdminSetMsgReadResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">setMsgRead</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询单聊未读消息计数" tabindex="-1"><a class="header-anchor" href="#查询单聊未读消息计数"><span>查询单聊未读消息计数</span></a></h2><p>App 后台可以通过该接口查询特定账号的单聊总未读数（包含所有的单聊会话）或者单个单聊会话的未读数。</p><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">GetC2cUnreadMsgRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetC2cUnreadMsgRequest</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> peerAccount <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bingo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">request<span class="token punctuation">.</span><span class="token function">setPeerAccount</span><span class="token punctuation">(</span>peerAccount<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">C2cUnreadMsgNumResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">getC2cUnreadMsgNum</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改单聊历史消息" tabindex="-1"><a class="header-anchor" href="#修改单聊历史消息"><span>修改单聊历史消息</span></a></h2><ul><li>管理员修改单聊历史消息。</li><li>可以单独修改消息中的 MsgBody 或 CloudCustomData 字段，也可以同时修改这两个字段。以请求中指定的字段值覆盖历史消息对应的字段。</li><li>待修改的单聊消息的 MsgKey 可通过以下方式获取： <ul><li>开启 <a href="https://cloud.tencent.com/document/product/269/1632" target="_blank" rel="noopener noreferrer">发单聊消息之前回调</a> 或 <a href="https://cloud.tencent.com/document/product/269/2716" target="_blank" rel="noopener noreferrer">发单聊消息之后回调</a>，通过该回调接口记录每条单聊消息的 MsgKey。</li><li>通过 <a href="#%E6%9F%A5%E8%AF%A2%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">查询单聊消息</a> 查询出待修改的单聊消息的 MsgKey。</li><li>通过 REST API <a href="#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">单发单聊消息</a> 和 <a href="#%E6%89%B9%E9%87%8F%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">批量发单聊消息</a> 接口发出的单聊消息，回包里会返回消息的 MsgKey。</li></ul></li></ul><div class="custom-container warning"><p class="custom-container-title">注意</p><p>使用该接口修改消息后，被修改的消息不能恢复，请谨慎调用该接口。</p></div><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">TIMTextMsgElement</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TIMTextMsgElement</span><span class="token punctuation">(</span><span class="token string">&quot;test modify c2c msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TIMMsgElement</span><span class="token punctuation">&gt;</span></span> msgBody <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">ModifyC2cMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">ModifyC2cMsgRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgKey</span><span class="token punctuation">(</span><span class="token string">&quot;1353691732_123_1653995506&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgBody</span><span class="token punctuation">(</span>msgBody<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">ModifyC2cMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">modifyC2cMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拉取单聊消息扩展" tabindex="-1"><a class="header-anchor" href="#拉取单聊消息扩展"><span>拉取单聊消息扩展</span></a></h2><p>App 管理员和会话成员可以拉取消息扩展，消息扩展为一组自定义的键值对。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><ul><li>此功能需 旗舰版套餐，并且已开通“消息扩展功能”功能(控制台“登录与消息”配置)。</li><li>单条单聊消息可设置的最大键值对数量为 300 条。</li><li>被设置的单聊消息需要在发送时指定“支持消息扩展”，参见 <a href="#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">单发单聊消息</a>。</li></ul></div><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">GetKeyValuesRequest</span> request <span class="token operator">=</span> <span class="token class-name">GetKeyValuesRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;bingo&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgKey</span><span class="token punctuation">(</span><span class="token string">&quot;1353691732_123_1653995506&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">startSeq</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">GetKeyValuesResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">getKeyValues</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置单聊消息扩展" tabindex="-1"><a class="header-anchor" href="#设置单聊消息扩展"><span>设置单聊消息扩展</span></a></h2><p>App 管理员和会话成员可以为单聊普通消息设置消息扩展，消息扩展为一组自定义的键值对。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><ul><li>此功能需 旗舰版套餐，并且已开通“消息扩展功能”功能(控制台“登录与消息”配置)。</li><li>单条单聊消息可设置的最大键值对数量为 300 条。</li><li>被设置的单聊消息需要在发送时指定“支持消息扩展”，参见 <a href="#%E5%8D%95%E5%8F%91%E5%8D%95%E8%81%8A%E6%B6%88%E6%81%AF">单发单聊消息</a>。</li></ul></div><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">SetKeyValuesRequest</span> request <span class="token operator">=</span> <span class="token class-name">SetKeyValuesRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">fromAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span><span class="token string">&quot;bingo&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgKey</span><span class="token punctuation">(</span><span class="token string">&quot;1353691732_123_1653995506&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">SetKeyValuesResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">setKeyValues</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="单向删除单聊历史消息" tabindex="-1"><a class="header-anchor" href="#单向删除单聊历史消息"><span>单向删除单聊历史消息</span></a></h2><ul><li>App 管理员调用该接口单向删除一个单聊会话的多条消息。</li><li>只能以消息的发送方或接收方的身份去删除单聊会话的历史消息。</li><li>只能单向删除（以会话其中一方的身份去删除某条消息后，自己看不到这条消息，会话的对方仍然可以看到这条消息）</li></ul><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">DeleteC2cMsgRambleRequest</span> request <span class="token operator">=</span> <span class="token class-name">DeleteC2cMsgRambleRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">operatorAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">peerAccount</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgKeyList</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token string">&quot;1353691732_123_1653995506&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">DeleteC2cMsgRambleResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">deleteC2cMsgRamble</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="清空群聊历史消息" tabindex="-1"><a class="header-anchor" href="#清空群聊历史消息"><span>清空群聊历史消息</span></a></h2><p>该 API 接口的作用是清空群聊中用户发送的历史消息。</p><p>此接口通过打标记实现 SDK 无法拉取的效果，并没有真的执行删除操作，Admin 用户仍然可以通过“拉取群聊历史消息”接口拉取已清空的历史消息。</p><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">ClearGroupMsgRequest</span> request <span class="token operator">=</span> <span class="token class-name">ClearGroupMsgRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">groupId</span><span class="token punctuation">(</span><span class="token string">&quot;test_group&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">msgSeq</span><span class="token punctuation">(</span><span class="token number">123L</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">ClearGroupMsgResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">clearGroupMsg</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,54),c=[e];function l(o,i){return a(),s("div",null,c)}const k=n(p,[["render",l],["__file","message.html.vue"]]),r=JSON.parse('{"path":"/guide/message.html","title":"单聊消息","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"单发单聊消息","slug":"单发单聊消息","link":"#单发单聊消息","children":[]},{"level":2,"title":"批量发单聊消息","slug":"批量发单聊消息","link":"#批量发单聊消息","children":[]},{"level":2,"title":"导入单聊消息","slug":"导入单聊消息","link":"#导入单聊消息","children":[]},{"level":2,"title":"查询单聊消息","slug":"查询单聊消息","link":"#查询单聊消息","children":[]},{"level":2,"title":"撤回单聊消息","slug":"撤回单聊消息","link":"#撤回单聊消息","children":[]},{"level":2,"title":"设置单聊消息已读","slug":"设置单聊消息已读","link":"#设置单聊消息已读","children":[]},{"level":2,"title":"查询单聊未读消息计数","slug":"查询单聊未读消息计数","link":"#查询单聊未读消息计数","children":[]},{"level":2,"title":"修改单聊历史消息","slug":"修改单聊历史消息","link":"#修改单聊历史消息","children":[]},{"level":2,"title":"拉取单聊消息扩展","slug":"拉取单聊消息扩展","link":"#拉取单聊消息扩展","children":[]},{"level":2,"title":"设置单聊消息扩展","slug":"设置单聊消息扩展","link":"#设置单聊消息扩展","children":[]},{"level":2,"title":"单向删除单聊历史消息","slug":"单向删除单聊历史消息","link":"#单向删除单聊历史消息","children":[]},{"level":2,"title":"清空群聊历史消息","slug":"清空群聊历史消息","link":"#清空群聊历史消息","children":[]}],"git":{"updatedTime":1704879157000,"contributors":[{"name":"Yang Libin","email":"szuyanglb@outlook.com","commits":9},{"name":"Libin YANG","email":"szuyanglb@outlook.com","commits":1},{"name":"acbin","email":"44314231+acbin@users.noreply.github.com","commits":1},{"name":"怡蘅","email":"hongyihengg@gmail.com","commits":1}]},"filePathRelative":"guide/message.md"}');export{k as comp,r as data};
