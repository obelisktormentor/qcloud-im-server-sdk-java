import{_ as t,r as e,c as p,a as c,b as n,d as l,w as o,e as s,o as i}from"./app-ZP_PHHWl.js";const u={},r=s(`<h1 id="账号管理" tabindex="-1"><a class="header-anchor" href="#账号管理"><span>账号管理</span></a></h1><h2 id="导入单个账号" tabindex="-1"><a class="header-anchor" href="#导入单个账号"><span>导入单个账号</span></a></h2><p>本接口用于将 App 自有账号导入即时通信 IM 账号系统，为该账号创建一个对应的内部 ID，使该账号能够使用即时通信 IM 服务。</p><div class="custom-container tip"><p class="custom-container-title">说明</p><p>同一个账号重复导入仅会创建 1 个内部 ID。</p></div><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">AccountImportRequest</span> request <span class="token operator">=</span> <span class="token class-name">AccountImportRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">faceUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://avatars.githubusercontent.com/u/43716716?s=200&amp;v=4&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">nick</span><span class="token punctuation">(</span><span class="token string">&quot;doocs&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">AccountImportResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>account<span class="token punctuation">.</span><span class="token function">accountImport</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="导入多个账号" tabindex="-1"><a class="header-anchor" href="#导入多个账号"><span>导入多个账号</span></a></h2><p>本接口用于批量将 App 自有账号导入即时通信 IM 账号系统，为该账号创建一个对应的内部 ID，使该账号能够使用即时通信 IM 服务。</p>`,8),k=s(`<p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> accounts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">accounts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;user1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">accounts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;user2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">MultiAccountImportRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MultiAccountImportRequest</span><span class="token punctuation">(</span>accounts<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">MultiAccountImportResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>account<span class="token punctuation">.</span><span class="token function">multiAccountImport</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除账号" tabindex="-1"><a class="header-anchor" href="#删除账号"><span>删除账号</span></a></h2><ul><li>仅支持删除套餐包类型为 IM 体验版的账号，其他类型的账号（如：TRTC、白板、专业版、旗舰版）无法删除。</li><li>账号删除时，该用户的关系链、资料等数据也会被删除</li><li>账号删除后，<strong>该用户的数据将无法恢复</strong>，请谨慎使用该接口。</li></ul><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">AccountDeleteItem</span> item1 <span class="token operator">=</span> <span class="token class-name">AccountDeleteItem</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span><span class="token string">&quot;user1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">AccountDeleteItem</span> item2 <span class="token operator">=</span> <span class="token class-name">AccountDeleteItem</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span><span class="token string">&quot;user2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AccountDeleteItem</span><span class="token punctuation">&gt;</span></span> deleteItems <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>item1<span class="token punctuation">,</span> item2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">AccountDeleteRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountDeleteRequest</span><span class="token punctuation">(</span>deleteItems<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">AccountDeleteResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>account<span class="token punctuation">.</span><span class="token function">accountDelete</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询账号" tabindex="-1"><a class="header-anchor" href="#查询账号"><span>查询账号</span></a></h2><p>用于查询自有账号是否已导入即时通信 IM, 支持批量查询。</p><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">AccountCheckItem</span> item1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountCheckItem</span><span class="token punctuation">(</span><span class="token string">&quot;user1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">AccountCheckItem</span> item2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountCheckItem</span><span class="token punctuation">(</span><span class="token string">&quot;user2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AccountCheckItem</span><span class="token punctuation">&gt;</span></span> checkItems <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>item1<span class="token punctuation">,</span> item2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">AccountCheckRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountCheckRequest</span><span class="token punctuation">(</span>checkItems<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">AccountCheckResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>account<span class="token punctuation">.</span><span class="token function">accountCheck</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="失效账号登录状态" tabindex="-1"><a class="header-anchor" href="#失效账号登录状态"><span>失效账号登录状态</span></a></h2><p>本接口适用于将 App 用户账号的登录状态（例如 UserSig）失效。</p><p>例如，开发者判断一个用户为恶意账号后，可以调用本接口将该用户当前的登录状态失效，这样用户使用历史 UserSig 登录即时通信 IM 会失败。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>支持一次失效一个账号，用户可以使用重新生成的 UserSig 登录即时通信 IM</p></div><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">KickRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KickRequest</span><span class="token punctuation">(</span><span class="token string">&quot;user2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">KickResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>account<span class="token punctuation">.</span><span class="token function">kick</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询账号在线状态" tabindex="-1"><a class="header-anchor" href="#查询账号在线状态"><span>查询账号在线状态</span></a></h2><p>获取用户当前的登录状态。</p><p>使用示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> toAccount <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;user1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">QueryOnlineStatusRequest</span> request <span class="token operator">=</span> <span class="token class-name">QueryOnlineStatusRequest</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">toAccount</span><span class="token punctuation">(</span>toAccount<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">isNeedDetail</span><span class="token punctuation">(</span><span class="token class-name">IsNeedDetail</span><span class="token punctuation">.</span><span class="token constant">YES</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">QueryOnlineStatusResult</span> result <span class="token operator">=</span> client<span class="token punctuation">.</span>account<span class="token punctuation">.</span><span class="token function">queryOnlineStatus</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function d(m,v){const a=e("RouteLink");return i(),p("div",null,[r,c("p",null,[n("注意： 本接口单次最多支持导入 100 个账号，且不支持导入账号的昵称和头像信息。请使用 "),l(a,{to:"/guide/profile.html#%E8%AE%BE%E7%BD%AE%E8%B5%84%E6%96%99"},{default:o(()=>[n("资料管理-设置资料")]),_:1}),n(" 设置其他信息。")]),k])}const g=t(u,[["render",d],["__file","account.html.vue"]]),b=JSON.parse('{"path":"/guide/account.html","title":"账号管理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"导入单个账号","slug":"导入单个账号","link":"#导入单个账号","children":[]},{"level":2,"title":"导入多个账号","slug":"导入多个账号","link":"#导入多个账号","children":[]},{"level":2,"title":"删除账号","slug":"删除账号","link":"#删除账号","children":[]},{"level":2,"title":"查询账号","slug":"查询账号","link":"#查询账号","children":[]},{"level":2,"title":"失效账号登录状态","slug":"失效账号登录状态","link":"#失效账号登录状态","children":[]},{"level":2,"title":"查询账号在线状态","slug":"查询账号在线状态","link":"#查询账号在线状态","children":[]}],"git":{"updatedTime":1696847753000,"contributors":[{"name":"Yang Libin","email":"szuyanglb@outlook.com","commits":4},{"name":"acbin","email":"44314231+acbin@users.noreply.github.com","commits":1},{"name":"怡蘅","email":"hongyihengg@gmail.com","commits":1}]},"filePathRelative":"guide/account.md"}');export{g as comp,b as data};
